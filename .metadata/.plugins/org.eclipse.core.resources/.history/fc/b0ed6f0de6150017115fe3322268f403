

/*****SERVER PROGRAM*****/

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h>
#include <errno.h>
#include <iostream>
#include <string>
using namespace std;

#define portno 3000//The port number on which the server runs


void error(const char *msg)
{
	perror(msg);
	printf ("%s", strerror(errno));
	exit(1);
}


int main(int argc, char *argv[])
{

	int sockfd, newsockfd, rwSuccess;
	size_t lengthOfMessageReceived;

	socklen_t client_length;

	char buffer[BUFSIZ];

	struct sockaddr_in serv_addr, cli_addr;

	sockfd = socket(AF_INET, SOCK_STREAM, 0);
	if (sockfd < 0)
		error("ERROR opening socket");

	bzero((char *) &serv_addr, sizeof(serv_addr));
	serv_addr.sin_family = AF_INET;
	serv_addr.sin_addr.s_addr = INADDR_ANY;
	serv_addr.sin_port = htons(portno);

	if (bind(sockfd, (struct sockaddr *) &serv_addr, sizeof(serv_addr)) < 0)
		error("ERROR on binding");

	listen(sockfd,5);

	memset(&cli_addr, '\0', sizeof(cli_addr));
	newsockfd = accept(sockfd, (struct sockaddr *) &cli_addr, &client_length);
	if (newsockfd < 0)
		error("ERROR on accept");

	bzero(buffer,BUFSIZ);

	rwSuccess = recvfrom(newsockfd, buffer, BUFSIZ, 0, (struct sockaddr *) &cli_addr, &client_length);
	if (rwSuccess < 0) error("ERROR reading from socket");
	printf("The message received from the client is %s\n", buffer);

	close(newsockfd);

	return 0;
}
